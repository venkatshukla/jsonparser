{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.31a9c33d97f85f11ffb6.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { TextArea, Grid, Form } from \"semantic-ui-react\";\r\nimport Layout from \"../components/Layout\";\r\nconst JSON5 = require('json5');\r\n\r\n//Array for sorting options\r\n\r\nclass JsonparserIndex extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonvalue: null //  the sortBy option\r\n        };\r\n    }\r\n\r\n    // Method triggered when sortBy option is changed\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ jsonvalue: value });\r\n        //console.log(this.state.sortBy);\r\n    };\r\n\r\n   getJSON(){\r\n    try {\r\n        var parsed = JSON5.parse(this.state.jsonvalue,null,10);\r\n        var plainjson = JSON.stringify(parsed, undefined, 10);\r\n        return plainjson;\r\n    } catch (error) {\r\n        if(this.state.jsonvalue.length<1){\r\n            return '';\r\n        }\r\n        return `Error: ${error}`;\r\n    }\r\n   \r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Column width={7} >\r\n                    <Form fluid>\r\n                        <TextArea placeholder='Paste your json here!' onChange={this.handleChange} style={{ minHeight: 600, 'padding-left':'15px' }} />\r\n                    </Form>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column width={8} >\r\n                    <Form fluid>\r\n                        <TextArea placeholder='Parsed Json output will appear here!' style={{ minHeight: 600, 'margin-left':'10px' }} \r\n                        value={this.state.jsonvalue!=null?this.getJSON():\"\"}/>\r\n                    </Form>\r\n                    </Grid.Column>\r\n                \r\n                </Grid>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default JsonparserIndex;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AACA;AACA;AAFA;AAFA;AAKA;AACA;AACA;;;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAhDA;AACA;AAmDA;;;;A","sourceRoot":""}